/// controleurCnc4.his  -> grblController-3.4.x.his
/// LETARTARE
20-09-2013
	- zapmaker a actualisé son site (sans actualisé l'exe)
	- dans le site 'letartare' je crée 'branches\cb1211\' le projet
		'GrblController.cbp' avec répertoire
			- src 	: dans lequel on met le code de zapmaker
				- \release  et \release\trlocale\*.qm
				- \debug
				- \trlocale  : *.ts  et le fichier translate.bat qui génère *.qm				
			- infos : 'GrblController-3.4.x.his'
			- objs 	: dans lquel se retrouveront tous le *.o
		ainsi il suffira de recopier le site zapmaker dans 'src'
	<- pour la livraison faire attention aux fichiers livrés ...
		
	- je corrige partiellement ce projet à l'aide de 'new-3.4.5'
		 des oublis de tr() dans 'mainwindow.cpp'  :477, 1162, 1167
	
18-09-2013 réception par zapmaker 3.4.5
	- corrections effectuées par zapmaker
	-> à revoir les chemins pour la traduction
		pour C::B on met les traductions en relatif par rapport à l'exe
			A VOIR ...
--------------------------------------------------------------------------------
    <-- envoi pour zapmaker dans 'v-3.4.5_letartare_patch.7z'
    1-Translations
		modified files
			- GcodeSenderGUIthreads.pro
			- main.cpp
			- mainwindow.cpp ( should tr("...") not a define )
				close_button_text(tr(CLOSE_BUTTON_TEXT)) not translate !
			- log4qt\propertyconfigurator.cpp  ( text errors )
		perhaps adding 'trlocale\qt_fr.qm'  if no source qt ? (dialog box not translate)

	2- disadvantage of the choice of mode 3/4 axes
		1- check 'Enable 4-axis mode'
		2- open 'grbl-0.8a' (3 axis)
		3- you have the manual controls of C -> 'error : Unsupported statement' !!

		and inverse

		1 - uncheck 'Enable 4-axis mode'
		2 - open 'Mega2560' (4 axis)
		3 - you do not have the manual controls of C!
		4- the command 'g01 c360 F4500 is executed without display !!

	3- Could you increase the height of the button 'Settings GRBL'(for translate) ?
--------------------------------------------------------------------------------


15-09-2013	: controleurCnc4.his  -> grblController-3.4.x.his
	- zapmaker m'envoie l'intégration du travail dans la 3.4.4 pour test
	- on nomme le projet 'GrblController-3.4.4.cbp'
	  on valide 'QtPrebuild'
	  on construit QtPrebuild puis Build : correct

	=> pour la traduction il a conservé un mauvais nom du fichier et il n'a pas mis
	la traduction des messages de dialogue (QFileDialog)
	=> dans il faut ajouter 'TRANSLATIONS += trlocale/GrblController_xx.ts'  pour
		un futur langage ...

	=> zapmaker a abandonné la détection automatique de 3/4 axes pour la remplacer
	par un choix dans 'Tools->Options->Enable 4-axis mode'
	Problème : si on choisit 4-axes et que l'on charge une 3-axes, l'affichage
	et les commandes manuelles restent en 4 axes :
			-> un déplacement manuel en C -> erreur !!
    => la fermeture par 'Close' bloque la réouverture  !!

------------------------------------------------------------------------------

26-08-2013
	- création d'une copie du site
		'zapmaker/GrblHoming' ==>  'LETARTARE/GrblHoming'
		on injecte toutes les modifcation réalisées
		depuis  'kosme/GrblHoming'  + détection automatique 3/4 axes + traduction

	<- on retrouve des textes non traduit dans
		''src\mainwindow.cpp' L297, L480, L1126, 1131
	<- il restait des 'str.toLocal8Bit().constData()' que l'on modifie
	on reconstruit release et debug -> correct

	--> l'exécution en 4 axes fonctionne bien, mais en 3 axes pas d'affichege
	du déplacement


24-08-2013
	- on utilise une variable 'int GCode::numaxis' qui va détecter le nombre
		 de positions renvoyées par la carte Arduino :
		 1- on teste d'abord avec 3 axes
		 2- si ce n'est pas bon on test avec 4 axes
		 3- si pas bon on ne fait rien (messages)
			si c'est bon à la fin on émet
			'emit updateCoordinates(machineCoord, workCoord);'
		<-- il faut modifer  "MainWindow::updateCoordinates(machineCoord, workCoord);"
			pour récupérer le nombre d'axes  et savoir si on un axe C dans 'bool axisC'
				"axisC = gcode.getNumaxis() == 4 ;"
			et ainsi valider les éléments de l'axe C
		<-- il faut encore mettre à 0 les afficherus de C si on charge seulement
			3 axes dans :
			--------------------------------------------------------------------
			"void MainWindow::refreshLcd()"
			...
			// LETARTARE
				if (axisC) {
					lcdDisplay('C', true, workCoordinates.c);
					lcdDisplay('C', false, machineCoordinates.c);
				}
				else {
					lcdDisplay('C', true, 0);
					lcdDisplay('C', false, 0);

				}
			/// <--
			--------------------------------------------------------------------
         <-- on remplace des 'defines' à traduire dans ''definitions.h'
				#define OPEN_BUTTON_TEXT                "Open"
				#define CLOSE_BUTTON_TEXT               "Close / Reset"
			par deux variables de la classe	 'MainWindows'
				QString open_button_text ;
				QString close_button_text ;
			initialisées dans la liste d'initialisation à :
				open_button_text(tr("Open")),
				close_button_text(tr("Close / Reset")),

            - on actualise par "lupdate.exe GcodeSenderGUIthreads.pro"
            - on traduit dans 'linguist'
            -on génère par 'lrelease controleurcnc4_fr.ts' -> *.qm
--------------------------------------------------------------------------------
        - on fait un test dans le répertoire  de Kosme ou l'on migre les
			modifications
			- 'qmake -config release -spec win32-g++ GcodeSenderGUIthreads.pro'
			- 'qmake -config debug -spec win32-g++ GcodeSenderGUIthreads.pro'

			- mingw32-make all

		<-- les deux versions fonctionnent !!!
--------------------------------------------------------------------------------

23-08-2013
	- on essaye de détecter si c'est un grbl 3 ou 4 axes
	- au départ on récupère la bannière qui doit comporter 'Grbl' plus la version
		l'analyse est faite dans
			'bool GCode::checkGrbl(const QString& result) : L284
	- ensuite on demande la position par envoi de '?', la réponse est analysée dans
		'void GCode::parseCoordinates(const QString& received, bool aggressive)'
		c'est ici que l'on va essayer de détecter si on reçoit trois ou quatre
		coordonnées :
			MPos:[0.00,0.00,0.00,0.00],WPos:[0.00,0.00,0.00,0.00]
			ou
			MPos:[0.00,0.00,0.00],WPos:[0.00,0.00,0.00]

22-08-2013
	- on récupère la 3.4.4 (kosme),
		"https://github.com/kosme/GrblHoming.git"

	dans laquelle on injecte les modifications faîtes sur la 3.4.3
		pour 4 axes en conservant les modifications de Kosme  dans ces 4 fichiers
			Readme.txt
			mainwindow.cpp, mainwindow.h
			version.h

	- on lance toutes les commandes depuis le fichier 'fait.h' pour avoir les chemins
		set PATH=%PATH%;u:\DONNEES\SVN_COMPILE\qt\4.7.3\bin;o:\DevCpp\MinGw32-TDM\bin

		qmake -config release -spec win32-g++ GcodeSenderGUIthreads.pro

	--> les makefiles comportent les modifications de la version qui fonctionne ???
		------------------------------------------------------------------------
		FLAGS = --enable-stdcall-fixup --enable-auto-import
				--enable-runtime-pseudo-reloc -mthreads -mwindows
		------------------------------------------------------------------------
		puis
		mingw32-make -fmakefile.release
			quelques erreurs de frappe vite corrigées
			--> GrblController.exe  1 308 250 octets

	    puis
	    release\GrblController.exe
			FONCTIONNE avec MEGA 2560

	<-- on recopie les fichiers de la 3.4.4 adaptée dans le projet
         l'exe  se lance correctement

--------------------------------------------------------------------------------


10-08-2013
	- en revisitant "https://github.com/zapmaker/GrblHoming" et en visualisant
		les images -> texte 'Enoi' au lieu de 'Envoi'

09-08-2013
	- test réalisé sur Mega2560 franchée sur un TB6560 pilotant un moteur pas à pas :
		- Xdir : b23, Xstep : b22
		- Ydir : b25, Ystep : b24
		- Zdir : b27, Zstep : b26
		- Cdir : b29, Xstep : b28 	-> fonctionne correctement

	-> dans les textes traduits il manque 'Grbl settings'  et 'C axis'
	<- on fait les modifications

	<==> sur le site "https://github.com/zapmaker/GrblHoming"  je propose  (19h10)
		l'adaptation 'ContoleurCnc4' à l'aide de photos ainsi que la traduction


04-08-2013
	<==> pour avoir accès à la discussion sur  'GiHub' j'ouvre un compte à 8h20
		LETARTARE, tartarinlj@laposte.net, "ffyjlnbn1"
	<==> sur le site "https://github.com/zapmaker/GrblHoming"  je propose de changer
		la ligne de commande 'QLineEdit * Command' -> 'QComboBox * Command->lineEdit()'
		ce qui permet de mémoriser cette ligne

	- on récupère les chaines par
		'lupdate GcodeSenderGUIthreads.pro' -> controleurcnc4_fr.ts
	- compile par
		'lrelease GcodeSenderGUIthreads.pro' -> controleurcnc4_fr.qm

	- pour récupérer les chaînes il faudrait utiliser 'xgettext'

	- on refait un essai de la carte Mega2560 chargé avec la version 0.81 et 4 axes
		avec 'ContoleurCnc4.exe'
			port 10, 38400
	--> on récupère la version au début et les paramètres par '$\n'
		mais aucun affichage -> erreur dans console
			"Error decoding position data"
		ce qui semble cohérent car pas prévu de récupérer les positions de 4 axes !!!
    --> cela apparait dans 'GCode::parseCoordinates()'
		--> on corrige la ligne qui analyse la réception des coordonnées
		"   /// on ajoute la coordonnée de A
		const QString coordRegExp(prepend
			+ "(-*\\d+\\.\\d+),(-*\\d+\\.\\d+),(-*\\d+\\.\\d+),(-*\\d+\\.\\d+)"
		    + append);
		"
	<-- la commande "G01 A100" n'est pas reconnue,  mais "g01 C100"  est reconnue
		mais pas de suite c'est normal.

    <== on dépose cette étape dans le dépot local -> r19

    - on va changer 'A' -> 'C'
		- les visuels :about.ui grbldialog.ui mainwindow.ui options.ui

	--> on reconstruit tout : correct
		: les trois axes fonctionnent en manuel pas le 4ème mais 'g01 c1000' est
			reconnue
	<-- des oublis de corriger quelques A
	--> commande reconnue et exécutée mais pas d'affichage
	<-- il faut ajouter la récupération de la position de l'axe C et son affichage
		dans 'GCode::parseCoordinates()'

	<== fonctionne les 4 axes !!!
	<-- on dépose dans le dépot local 23h10 : -> r20

	-remarque :
		'const char * qPrintable(const Qstring & str)' est équivalent à
		'str.toLocal8Bit().constData()'
	--> on change 'void gotoXYZ(QString line);'  -> 'void gotoXYZC(QString line);'
	- mais cette commmande oubli C !

	--> la raz des 4 axes fonctionne
	<--- on modifie le visuel des paramètres (il était illisible)

	--> 'Unlock' ("$X")  : error bad number format

	- il serait interessant d'avoir à la place de la ligne de commande une boite
		à liste !!    QComboBox
		- dans 'mainwindow.ui' dans on remplace le QlineEdit par QCombox
		- puis dans les fichiers on remplace
		'QLineEdit * Command' par   'QComboBox * Command->lineEdit()'


03-08-2013
	- on installe dans les fichiers la commande 'tr(" ... ")'  qui permet de réaliser
	la traduction des différentes chaînes
	- cette commande est aussi un constructeur de 'QsString Mes(tr("..."))'
	-> le repérage des chaînes est long, attention au 'const char *'
		exemple :
		const char * mes = "toto"   =>  = qPrinTable(tr("...."))

	- après reconstruction il faut collecter ces chaînes
		1- modifier le *.pro avec
			# Translations
			TRANSLATIONS +=  trlocale/controleurcnc4_fr.ts

		2- générer (ou actualiser) le fichier 'trlocale/controleurcnc4_fr.ts'
			"lupdate.exe GcodeSenderGUIthreads.pro"

		3- éditer ce fichier avec 'Qt Linguist'
			le traduire et le sauvegarder

        4- générer le fichier 'trlocale/controleurcnc4_fr.qm' par
			"lrelease.exe trlocale/controleurcnc4_fr.qm"

		5- le mettre dans le même répertoire que l'exécutable

		6- dans le main de l'application il faut introduire :
			------------------------------------------------------------
			/// récupère la chaîne locale : ici "fr"
			QString locale = QLocale::system().name().section('_', 0, 0);
			QTranslator translator;
			translator.load(QString("controleurcnc4_") + locale );
			a.installTranslator(&translator);
			------------------------------------------------------------

		7-  à l'exécution de l'application (en direct pas depuis CB !)
			elle apparait en français (ce qui a été traduit)

	<=== dépot local r13

02-08-2013  r12 à 23h30
	- à l'aide de 'Qtdesigner' on ajoute par copier coller deux afficheurs pour
		l'axe A en faisant un peu de place en agrandissant la fenêtre
	- on ajoute aussi des commandes manuelles pour l'axe A

	- on reconstruit par 'prebuild' puis par 'build' -> Correct
	<-- l'exécution fonctionne pour l'aspect visuel

	- on ajoute des fonctions dans 'mainwindow.h' et 'mainwindow.cpp'  pour l'axe A'
		void incA(), void decA(), bool invA()  .... voir les remarques /// LETARTARE
     <- construction fonctionne et l'affichage aussi  !!!

     --> il faut essayer d'utiliser le pilote gdblMega2560 en repérant les
		broches de sorties ...

31-07-2013
	- on arrive à supprimer les fichiers créés par qtPrebuild
	- on reconstruit ==> release et debug fonctionnenet avec Uno et grbl 0.8c
    - on ajoute une entrée de 100 pour les commandes manuelles : on reconstruit
		-> cela fonctionne

30-07-2013
	- on teste la nouvelle entrée de 'qtprebuild_plugin.script' -> "Qt PreBuild clean"
		qui permet de supprimer du projet tous les fichiers créés précédemment

29-07-2013  r4 sur svn
	- on refabrique la version originale par  'fait.t' pour release et debug
		et on redirige la sortie dans 'resu.txt' et 'resudebug.tx' , on récupère
		à l'écran les sorties d'avertissement 'averdebug.txt'

	-> on analyse ces fichiers pour déterminer les options du compilateur,
		du lieur et autres

	- compilateur commun :
		autres 	: -c -frtti -fexceptions -mthreads
		defines :UNICODE QT_LARGEFILE_SUPPORT QT_DLL  QT_NO_DEBUG QT_GUI_LIB
				QT_CORE_LIB QT_HAVE_MMX QT_HAVE_3DNOW  QT_HAVE_SSE  QT_HAVE_MMXEXT
				QT_HAVE_SSE2 QT_THREAD_SUPPORT  QT_NEEDS_QMAIN
	- lieur commun :
		lib		: mingw32, setupapi, advapi32, user32
		options : --enable-stdcall-fixup --enable-auto-import --enable-runtime-pseudo-reloc
				-mconsole -mthreads -mwindows
	- lieur release :
		lib		: Qtmain, QtGui4, QtCore4
	- lieur debug :
		lib		: Qtmain, QtGui4d, QtCore4d

    -chemins compilateur :
		- src, src\log4qt, src\log4qt\helpers, src\log4qt\spi, src\log4qt\varia
		- $(#qt4.include)\Qtcore, $(#qt4.include)\QGtui, $(#qt4.include),
		- $(#qt4.include)\QtActiveQt, $(#qt4)\mecspecs\win32-g++
	- chemins lieur :
		- $(#qt4.lib)
	- chemins res :
		- src

	- les fichiers du projet :
		- dans src  	: 22 *.h, 17 *.cpp, 4 *.ui, 1 *.qrc,
						: 1 *.ico, 1 *.rc, 1 *.rcc
        - dans log4qt	:  41 *.h, 40 *.cpp
        - dans QextSerialPort 	: 6 *.h, 4 *.cpp  + si notiifer 1 *.h, 1 *.cpp
        - dans img	: 5 *.gif, 6 *.png

    ==> on construit en enlevant les 'notifiers' locaux 'qextwineventnotifier_p.h'
		et en donnant le chemin du fichier officiel :
		'u:\DONNEES\SVN_COMPILE\qt\4.7.3\src\corelib\kernel\qwineventnotifier_p.h'
		soit en include
			'$(#qt4.include\QtCore\private'
			qui pointe dessus
		- et en liant à la cible 'Release' la librairie statique 'libqextserialport.a'
			qui se trouve dans le répertoire origine

	<== toujours les mêmes erreurs ...  , la première
	----------------------------------------------------------------------------
		'U:\DONNEES\SVN_COMPILE\qt\4.7.3\lib/libqextserialport.a(qextserialenumerator.o)
		:qextserialenumerator.cpp:(.text+0x1e2):
		undefined reference to `_imp___ZN9QMetaType4typeEPKc'
	----------------------------------------------------------------------------
	- dans la librairie statique 'libqextserialport.a' on trouve :
		 '__imp___ZN9QMetaType4typeEPKc'  ( double souligné en tête !!!)
		 on retrouve ce dernier symbole dans d'autres librairies QT'
	==> en utilisant 'ar -t ' on a
	----------------------------------------------------------------------------
	U:\DONNEES\SVN_COMPILE\qt\4.7.3\lib>ar -t libqextserialport.a
		qextserialport.o
		qextserialenumerator.o
		qextserialport_win.o
		qextserialenumerator_win.o
	----------------------------------------------------------------------------
	--> on constate que les notifiers ne sont pas intégrés ...

    ==> on essaye de lier avec la librairie dynamique au même endroit  'qextserialport1.dll'
	<== CELA FONCTIONNE ... !!!
		reste à voir la construction des librairies statiques  avec qt-4.7.3  ...

		--> seul le fichier rs232c.h utilise
			#include <qextserialport.h>
			#include <qextserialenumerator.h>

	=====> on essaye de construire en local la cible 'qserial' la librairie
		'libqserial.a'  en la liant à 'QCore4' avec les notifiers et la define
		'QESP_NO_QT4_PRIVATE'
		==> mais on met en remarque dans le fichier 'moc_qextserialport.cxx' la
			ligne  120
			' case 13: d_func()->_q_canRead(); break;'
		==> plus d'erreur de construction !!'
		puis on liste par 'ar -t'
		------------------------------------------------------------------------
		U:\DONNEES\TRAVAIL_NT\CodeBlock\Gcc\Qt\ControleurGrbl\ControleurCnc4\trunk>ar -t libqtserial.a
		moc_qextserialenumerator.o
		moc_qextserialport.o
		moc_qextwineventnotifier_p.o
		qextserialenumerator.o
		qextserialenumerator_win.o
		qextserialport.o
		qextserialport_win.o
		qextwineventnotifier_p.o
		------------------------------------------------------------------------
		-> elle comporte '__imp___ZN9QMetaType4typeEPKc' et non '_imp___ZN9QMetaType4typeEPKc'  !

		-> si on essaye de construire la cible release avec une liaison sur cette
		statique  -> undefined reference '_imp__SetupDiGetDeviceRegistryPropertyW@28'
		dans le module 'qextserialenumerator_win.o' de 'libqtserial.a' on trouve seulement
		'__imp__SetupDiGetDeviceRegistryPropertyW@28'  ( double souslignement !!)

	==> dernier essai on construit une librairie partagée à la place de la statique
		-> 'qtserial.dll'
		------------------------------------------------------------------------
		...\src\QextSerialPort\moc_qextserialport.cxx:120:26:
		error: invalid use of incomplete type 'class QextSerialPortPrivate'
		et
		\src\QextSerialPort\qextserialport.h:170:7:
		error: forward declaration of 'class QextSerialPortPrivate'
        ------------------------------------------------------------------------

    <-- on revient à la solution : liaison avec la librairie dynamique de Qt-4.7.3
		'qextserialport1.dll' qui fonctionne

    <- on dépose cette version sur le dépot local (r4)

28-07-2013 v0.1

	- la construction de la version originale ne fonctionne pas complètement
	->  la commande :
		'qmake -config release -spec win32-g++ GcodeSenderGUIthreads.pro'
	   génère un Makefile.release qui comporte des options incomprises par le lieur
	   -------------------------------------------------------------------------
	   LFLAGS =  -enable-stdcall-fixup -Wl,-enable-auto-import
	   -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
	   -------------------------------------------------------------------------
	   il faut écrire à la place  ( -Wl, n'est pas reconnu !!)
	   -------------------------------------------------------------------------
	   LFLAGS = --enable-stdcall-fixup --enable-auto-import
	   --enable-runtime-pseudo-reloc -s -mthreads -mwindows -mconsole
	   -------------------------------------------------------------------------
       et là c'est correct avec 'mingw32-make -fmakefile.release'


	- on récupère le projet 'Controleur 3 axes pour grblMega2560 de ZapMaker
		url source = "https://github.com/zapmaker/GrblHoming"  ( accès par SVN ! )
	- on crée un dépot local 'Controleur4axes'
		'u:\DONNEES\DepotLocal\Controleur4axes' (renommé depuis 'ControleurCnc4')

	<-- on dépose ce premier jet

	- on essaye de reproduire la structure de l''original dans 'src'
	- on supprime les fichiers du projet de test
	- on crée quatre cibles
		- release, debug, : gui exécutables
		- qserial,  : librairie statique
		- infos (commande):  historique et informations


	--> on touve 34 fichiers *.h contenant 'Q_OBJECT'

	<-- on crée 38 fichier moc*, ui*, qrc* dont
		- dans src 			: 7 moc*, 4 ui*, 1 qrc*
		- dans Qextserial   : 3 moc*,
	    - dans logqt4		: 12 moc*

	    le script indique 77 fichiers dans Created (sur trois cibles)

	- on doit définir tous les chemins
		qt4 = 'u:/DONNEES/SVN_COMPILE/qt/4.7.3/lib'
		include : src\local4qt, src\local4qt\helpers, src\local4qt\spi,
					src\local4qt\varia
				$(#qt4.include), $(#qt4.include)\QtCore, $(#qt4.include)\QtGui
				$(#qt4.include)\ActiveQt, $(#qt4)\mkspecs\win32-g++
				QextSerialPort\QextSerialPort.h

		lieur :

		aucune option de définie

	- doit défnir les librairies utilisées


	1- construction lib qserial statique : correcte
	2- construction lib qserial dynamique : de nombreuses erreurs

	2- construction release : on ajuste certains chemins dans les sources

		éditions de liens : undefined reference to `_imp__SetupDiGetDeviceRegistryPropertyW@28'
		-> dans QextSerialPort.a on trouve `__imp__SetupDiGetDeviceRegistryPropertyW@28'
			double souligné !!!

    ---> on essaie de récupérer les lignes de générations par Makefile
     1-pour l'exécutable release
	 ------------------------------
	 g++ --enable-stdcall-fixup --enable-auto-import --enable-runtime-pseudo-reloc
	 -mconsole -mthreads -mwindows -o release/GrblController.exe object_script.GrblController.Release
	 -L'u:/DONNEES/SVN_COMPILE/qt/4.7.3/lib' -lmingw32 -lqtmain
	 release/grbl_res.o -lsetupapi -ladvapi32 -luser32 -lQtGui4 -lQtCore4
	 ---------------------------------------------------------------------------
	 2-
	 ---------------------------------------------------------------------------
	 g++ -c -O2 -frtti -fexceptions -mthreads -Wall -DUNICODE -DQT_LARGEFILE_SUPPORT
	 -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW
	 -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
	 -I'u:/DONNEES/SVN_COMPILE/qt/4.7.3/include/QtCore'
	 -I'u:/DONNEES/SVN_COMPILE/qt/4.7.3/include/QtGui'
	 -I'u:/DONNEES/SVN_COMPILE/qt/4.7.3/include'
	 -I'QextSerialPort' -I'.'
	 -I'u:/DONNEES/SVN_COMPILE/qt/4.7.3/include/ActiveQt' -I'release' -I'.'
	 -I'u:/DONNEES/SVN_COMPILE/qt/4.7.3/mkspecs/win32-g++' -o release/qrc_GrblController.o
	 release/qrc_GrblController.cpp
	 ---------------------------------------------------------------------------
	 windres -i grbl.rc -o release/grbl_res.o --include-dir=. -DUNICODE
	 -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
	 -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2
	 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
	 ---------------------------------------------------------------------------

     ==> pour générer les moc il faut utiliser des options  ....
     ==> ajouter au include
